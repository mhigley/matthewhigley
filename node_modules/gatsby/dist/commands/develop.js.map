{"version":3,"sources":["../../src/commands/develop.js"],"names":["url","require","glob","fs","openurl","chokidar","express","graphqlHTTP","graphqlPlayground","default","formatError","request","rl","webpack","webpackConfig","bootstrap","store","syncStaticDir","developHtml","withBasePath","report","launchEditor","formatWebpackMessages","chalk","address","withResolverContext","sourceNodes","websocketManager","getSslCert","slash","initTracer","apiRunnerNode","telemetry","setTimeout","rlInterface","createInterface","input","process","stdin","output","stdout","on","trackCli","exit","startServer","program","directory","directoryPath","createIndexHtml","catch","err","name","panic","stripIndent","devConfig","port","compiler","app","use","expressMiddleware","log","path","heartbeat","env","GATSBY_GRAPHQL_IDE","get","endpoint","schema","getState","graphiql","context","stack","split","req","res","next","header","post","enableRefresh","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","authorizedRefresh","headers","authorization","console","end","query","fileName","lineNumber","index","logLevel","publicPath","stats","developMiddleware","config","proxy","prefix","proxiedUrl","originalUrl","pipe","message","error","status","sendFile","server","Server","ssl","createServer","init","socket","getSocket","listener","listen","host","code","watchGlobs","map","watch","to","emit","module","exports","openTracingConfigFile","detect","parseInt","https","sitePackageJson","replace","certFile","keyFile","Promise","resolve","_port","question","answer","length","match","then","c","l","prepareUrls","protocol","formatUrl","hostname","format","pathname","prettyPrintUrl","bold","isUnspecifiedHost","lanUrlForConfig","lanUrlForTerminal","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser","printInstructions","appName","urls","useYarn","cyan","printDeprecationWarnings","deprecatedApis","fixMap","boundActionCreators","newName","docsLink","pathContext","deprecatedLocations","forEach","api","sync","nodir","file","fileText","readFileSync","matchingApis","filter","indexOf","push","yellow","isFirstCompile","hooks","done","tapAsync","messages","toJson","isSuccessful","errors","open"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst url = require(`url`)\nconst glob = require(`glob`)\nconst fs = require(`fs`)\nconst openurl = require(`better-opn`)\nconst chokidar = require(`chokidar`)\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst graphqlPlayground = require(`graphql-playground-middleware-express`)\n  .default\nconst { formatError } = require(`graphql`)\nconst request = require(`request`)\nconst rl = require(`readline`)\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst bootstrap = require(`../bootstrap`)\nconst { store } = require(`../redux`)\nconst { syncStaticDir } = require(`../utils/get-static-dir`)\nconst developHtml = require(`./develop-html`)\nconst { withBasePath } = require(`../utils/path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst launchEditor = require(`react-dev-utils/launchEditor`)\nconst formatWebpackMessages = require(`react-dev-utils/formatWebpackMessages`)\nconst chalk = require(`chalk`)\nconst address = require(`address`)\nconst withResolverContext = require(`../schema/context`)\nconst sourceNodes = require(`../utils/source-nodes`)\nconst websocketManager = require(`../utils/websocket-manager`)\nconst getSslCert = require(`../utils/get-ssl-cert`)\nconst slash = require(`slash`)\nconst { initTracer } = require(`../utils/tracer`)\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst telemetry = require(`gatsby-telemetry`)\n\n// const isInteractive = process.stdout.isTTY\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfere with the regular\n// bootstrap.\nsetTimeout(() => {\n  syncStaticDir()\n}, 10000)\n\nconst rlInterface = rl.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n})\n\n// Quit immediately on hearing ctrl-c\nrlInterface.on(`SIGINT`, () => {\n  telemetry.trackCli(`DEVELOP_STOP`)\n  process.exit()\n})\n\nasync function startServer(program) {\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = () =>\n    developHtml(program).catch(err => {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://gatsby.dev/debug-html\n        `,\n        err\n      )\n    })\n\n  // Start bootstrap process.\n  await bootstrap(program)\n\n  await createIndexHtml()\n\n  const devConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port\n  )\n\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  const app = express()\n  app.use(telemetry.expressMiddleware(`DEVELOP`))\n  app.use(\n    require(`webpack-hot-middleware`)(compiler, {\n      log: false,\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n\n  if (process.env.GATSBY_GRAPHQL_IDE === `playground`) {\n    app.get(\n      `/___graphql`,\n      graphqlPlayground({\n        endpoint: `/___graphql`,\n      }),\n      () => {}\n    )\n  }\n\n  app.use(\n    `/___graphql`,\n    graphqlHTTP(() => {\n      const schema = store.getState().schema\n      return {\n        schema,\n        graphiql:\n          process.env.GATSBY_GRAPHQL_IDE === `playground` ? false : true,\n        context: withResolverContext({}, schema),\n        formatError(err) {\n          return {\n            ...formatError(err),\n            stack: err.stack ? err.stack.split(`\\n`) : [],\n          }\n        },\n      }\n    })\n  )\n\n  // Allow requests from any origin. Avoids CORS issues when using the `--host` flag.\n  app.use((req, res, next) => {\n    res.header(`Access-Control-Allow-Origin`, `*`)\n    res.header(\n      `Access-Control-Allow-Headers`,\n      `Origin, X-Requested-With, Content-Type, Accept`\n    )\n    next()\n  })\n\n  /**\n   * Refresh external data sources.\n   * This behavior is disabled by default, but the ENABLE_REFRESH_ENDPOINT env var enables it\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  app.post(`/__refresh`, (req, res) => {\n    const enableRefresh = process.env.ENABLE_GATSBY_REFRESH_ENDPOINT\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (enableRefresh && authorizedRefresh) {\n      console.log(`Refreshing source data`)\n      sourceNodes()\n    }\n    res.end()\n  })\n\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  // Disable directory indexing i.e. serving index.html from a directory.\n  // This can lead to serving stale html files during development.\n  //\n  // We serve by default an empty index.html that sets up the dev environment.\n  app.use(require(`./develop-static`)(`public`, { index: false }))\n\n  app.use(\n    require(`webpack-dev-middleware`)(compiler, {\n      logLevel: `trace`,\n      publicPath: devConfig.output.publicPath,\n      stats: `errors-only`,\n    })\n  )\n\n  // Expose access to app for advanced use cases\n  const { developMiddleware } = store.getState().config\n\n  if (developMiddleware) {\n    developMiddleware(app)\n  }\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    const { prefix, url } = proxy\n    app.use(`${prefix}/*`, (req, res) => {\n      const proxiedUrl = url + req.originalUrl\n      req\n        .pipe(\n          request(proxiedUrl).on(`error`, err => {\n            const message = `Error when trying to proxy request \"${\n              req.originalUrl\n            }\" to \"${proxiedUrl}\"`\n\n            report.error(message, err)\n            res.status(500).end()\n          })\n        )\n        .pipe(res)\n    })\n  }\n\n  await apiRunnerNode(`onCreateDevServer`, { app })\n\n  // Render an HTML page and serve it.\n  app.use((req, res, next) => {\n    res.sendFile(directoryPath(`public/index.html`), err => {\n      if (err) {\n        res.status(500).end()\n      }\n    })\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n  let server = require(`http`).Server(app)\n\n  // If a SSL cert exists in program, use it with `createServer`.\n  if (program.ssl) {\n    server = require(`https`).createServer(program.ssl, app)\n  }\n  websocketManager.init({ server, directory: program.directory })\n  const socket = websocketManager.getSocket()\n\n  const listener = server.listen(program.port, program.host, err => {\n    if (err) {\n      if (err.code === `EADDRINUSE`) {\n        // eslint-disable-next-line max-len\n        report.panic(\n          `Unable to start Gatsby on port ${\n            program.port\n          } as there's already a process listening on that port.`\n        )\n        return\n      }\n\n      report.panic(`There was a problem starting the development server`, err)\n    }\n  })\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    slash(directoryPath(path))\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml()\n    socket.to(`clients`).emit(`reload`)\n  })\n\n  return [compiler, listener]\n}\n\nmodule.exports = async (program: any) => {\n  initTracer(program.openTracingConfigFile)\n  telemetry.trackCli(`DEVELOP_START`)\n\n  const detect = require(`detect-port`)\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  // In order to enable custom ssl, --cert-file --key-file and -https flags must all be\n  // used together\n  if ((program[`cert-file`] || program[`key-file`]) && !program.https) {\n    report.panic(\n      `for custom ssl --https, --cert-file, and --key-file must be used together`\n    )\n  }\n\n  // Check if https is enabled, then create or get SSL cert.\n  // Certs are named after `name` inside the project's package.json.\n  // Scoped names are converted from @npm/package-name to npm--package-name\n  if (program.https) {\n    program.ssl = await getSslCert({\n      name: program.sitePackageJson.name.replace(`@`, ``).replace(`/`, `--`),\n      certFile: program[`cert-file`],\n      keyFile: program[`key-file`],\n      directory: program.directory,\n    })\n  }\n\n  let compiler\n  await new Promise(resolve => {\n    detect(port, (err, _port) => {\n      if (err) {\n        report.panic(err)\n      }\n\n      if (port !== _port) {\n        // eslint-disable-next-line max-len\n        const question = `Something is already running at port ${port} \\nWould you like to run the app at another port instead? [Y/n] `\n\n        rlInterface.question(question, answer => {\n          if (answer.length === 0 || answer.match(/^yes|y$/i)) {\n            program.port = _port // eslint-disable-line no-param-reassign\n          }\n\n          startServer(program).then(([c, l]) => {\n            compiler = c\n            resolve()\n          })\n        })\n      } else {\n        startServer(program).then(([c, l]) => {\n          compiler = c\n          resolve()\n        })\n      }\n    })\n  })\n\n  function prepareUrls(protocol, host, port) {\n    const formatUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port,\n        pathname: `/`,\n      })\n    const prettyPrintUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port: chalk.bold(port),\n        pathname: `/`,\n      })\n\n    const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n    let lanUrlForConfig, lanUrlForTerminal\n    if (isUnspecifiedHost) {\n      try {\n        // This can only return an IPv4 address\n        lanUrlForConfig = address.ip()\n        if (lanUrlForConfig) {\n          // Check if the address is a private ip\n          // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n          if (\n            /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n              lanUrlForConfig\n            )\n          ) {\n            // Address is private, format it for later use\n            lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n          } else {\n            // Address is not private, so we will discard it\n            lanUrlForConfig = undefined\n          }\n        }\n      } catch (_e) {\n        // ignored\n      }\n    }\n    // TODO collect errors (GraphQL + Webpack) in Redux so we\n    // can clear terminal and print them out on every compile.\n    // Borrow pretty printing code from webpack plugin.\n    const localUrlForTerminal = prettyPrintUrl(host)\n    const localUrlForBrowser = formatUrl(host)\n    return {\n      lanUrlForConfig,\n      lanUrlForTerminal,\n      localUrlForTerminal,\n      localUrlForBrowser,\n    }\n  }\n\n  function printInstructions(appName, urls, useYarn) {\n    console.log()\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`)\n    console.log()\n\n    if (urls.lanUrlForTerminal) {\n      console.log(\n        `  ${chalk.bold(`Local:`)}            ${urls.localUrlForTerminal}`\n      )\n      console.log(\n        `  ${chalk.bold(`On Your Network:`)}  ${urls.lanUrlForTerminal}`\n      )\n    } else {\n      console.log(`  ${urls.localUrlForTerminal}`)\n    }\n\n    console.log()\n    console.log(\n      `View ${\n        process.env.GATSBY_GRAPHQL_IDE === `playground`\n          ? `the GraphQL Playground`\n          : `GraphiQL`\n      }, an in-browser IDE, to explore your site's data and schema`\n    )\n    console.log()\n    console.log(`  ${urls.localUrlForTerminal}___graphql`)\n\n    console.log()\n    console.log(`Note that the development build is not optimized.`)\n    console.log(\n      `To create a production build, use ` + `${chalk.cyan(`npm run build`)}`\n    )\n    console.log()\n  }\n\n  function printDeprecationWarnings() {\n    const deprecatedApis = [`boundActionCreators`, `pathContext`]\n    const fixMap = {\n      boundActionCreators: {\n        newName: `actions`,\n        docsLink: `https://gatsby.dev/boundActionCreators`,\n      },\n      pathContext: {\n        newName: `pageContext`,\n        docsLink: `https://gatsby.dev/pathContext`,\n      },\n    }\n    const deprecatedLocations = {}\n    deprecatedApis.forEach(api => (deprecatedLocations[api] = []))\n\n    glob\n      .sync(`{,!(node_modules|public)/**/}*.js`, { nodir: true })\n      .forEach(file => {\n        const fileText = fs.readFileSync(file)\n        const matchingApis = deprecatedApis.filter(\n          api => fileText.indexOf(api) !== -1\n        )\n        matchingApis.forEach(api => deprecatedLocations[api].push(file))\n      })\n\n    deprecatedApis.forEach(api => {\n      if (deprecatedLocations[api].length) {\n        console.log(\n          `%s %s %s %s`,\n          chalk.cyan(api),\n          chalk.yellow(`is deprecated. Please use`),\n          chalk.cyan(fixMap[api].newName),\n          chalk.yellow(\n            `instead. For migration instructions, see ${\n              fixMap[api].docsLink\n            }\\nCheck the following files:`\n          )\n        )\n        console.log()\n        deprecatedLocations[api].forEach(file => console.log(file))\n        console.log()\n      }\n    })\n  }\n\n  let isFirstCompile = true\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tapAsync(`print getsby instructions`, (stats, done) => {\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    const messages = formatWebpackMessages(stats.toJson({}, true))\n    const urls = prepareUrls(\n      program.ssl ? `https` : `http`,\n      program.host,\n      program.port\n    )\n    const isSuccessful = !messages.errors.length\n    // if (isSuccessful) {\n    // console.log(chalk.green(`Compiled successfully!`))\n    // }\n    // if (isSuccessful && (isInteractive || isFirstCompile)) {\n    if (isSuccessful && isFirstCompile) {\n      printInstructions(program.sitePackageJson.name, urls, program.useYarn)\n      printDeprecationWarnings()\n      if (program.open) {\n        Promise.resolve(openurl(urls.localUrlForBrowser)).catch(err =>\n          console.log(\n            `${chalk.yellow(\n              `warn`\n            )} Browser not opened because no browser was found`\n          )\n        )\n      }\n    }\n\n    isFirstCompile = false\n\n    // If errors exist, only show errors.\n    // if (messages.errors.length) {\n    // // Only keep the first error. Others are often indicative\n    // // of the same problem, but confuse the reader with noise.\n    // if (messages.errors.length > 1) {\n    // messages.errors.length = 1\n    // }\n    // console.log(chalk.red(\"Failed to compile.\\n\"))\n    // console.log(messages.errors.join(\"\\n\\n\"))\n    // return\n    // }\n\n    // Show warnings if no errors were found.\n    // if (messages.warnings.length) {\n    // console.log(chalk.yellow(\"Compiled with warnings.\\n\"))\n    // console.log(messages.warnings.join(\"\\n\\n\"))\n\n    // // Teach some ESLint tricks.\n    // console.log(\n    // \"\\nSearch for the \" +\n    // chalk.underline(chalk.yellow(\"keywords\")) +\n    // \" to learn more about each warning.\"\n    // )\n    // console.log(\n    // \"To ignore, add \" +\n    // chalk.cyan(\"// eslint-disable-next-line\") +\n    // \" to the line before.\\n\"\n    // )\n    // }\n\n    done()\n  })\n}\n"],"file":"develop.js"}