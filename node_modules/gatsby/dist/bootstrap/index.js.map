{"version":3,"sources":["../../src/bootstrap/index.js"],"names":["_","require","slash","fs","md5File","crypto","del","path","convertHrtime","Promise","telemetry","apiRunnerNode","getBrowserslist","graphql","store","emitter","loadPlugins","loadThemes","report","getConfigFile","tracer","globalTracer","preferDefault","nodeTracking","withResolverContext","startAutosave","process","on","reason","p","panic","extractQueries","runInitialQueries","queryQueue","writePages","writeRedirects","module","exports","args","spanArgs","parentSpan","childOf","bootstrapSpan","startSpan","directory","program","browserslist","dispatch","type","payload","activity","activityTimer","start","config","__experimentalThemes","themes","polyfill","warn","end","flattenedPlugins","decorateEvent","plugins","map","name","version","span","env","NODE_ENV","pluginVersions","hashes","all","resolve","catch","pluginsHash","createHash","update","JSON","stringify","concat","digest","state","getState","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","cacheDirectory","remove","emptyDir","e","error","ensureDir","GATSBY_DB_NODES","loki","dbSaveFile","saveFile","dirname","trackDbNodes","srcDir","__dirname","siteDir","tryRequire","copy","clobber","ensureDirSync","err","hasAPIFile","plugin","skipSSR","undefined","envAPIs","join","Array","isArray","length","ssrPlugins","filter","options","pluginOptions","browserPlugins","browserPluginsRequires","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","build","extensions","apiResults","traceId","flattenDeep","graphqlRunner","query","context","schema","waitForCascadingActions","rebuildWithSitePage","startQueries","hrtime","stats","getStats","setStatus","total","peak","seconds","toFixed","emit","boundActionCreators","setProgramStatus","onEndJob","checkJobsDone","debounce","jobs","active","off","finishBootstrap","log","uptime","finish"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst _ = require(`lodash`)\nconst slash = require(`slash`)\nconst fs = require(`fs-extra`)\nconst md5File = require(`md5-file/promise`)\nconst crypto = require(`crypto`)\nconst del = require(`del`)\nconst path = require(`path`)\nconst convertHrtime = require(`convert-hrtime`)\nconst Promise = require(`bluebird`)\nconst telemetry = require(`gatsby-telemetry`)\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst getBrowserslist = require(`../utils/browserslist`)\nconst { graphql } = require(`graphql`)\nconst { store, emitter } = require(`../redux`)\nconst loadPlugins = require(`./load-plugins`)\nconst loadThemes = require(`./load-themes`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst getConfigFile = require(`./get-config-file`)\nconst tracer = require(`opentracing`).globalTracer()\nconst preferDefault = require(`./prefer-default`)\nconst nodeTracking = require(`../db/node-tracking`)\nconst withResolverContext = require(`../schema/context`)\nrequire(`../db`).startAutosave()\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason, p) => {\n  report.panic(reason)\n})\n\nconst {\n  extractQueries,\n} = require(`../internal-plugins/query-runner/query-watcher`)\nconst {\n  runInitialQueries,\n} = require(`../internal-plugins/query-runner/page-query-runner`)\nconst queryQueue = require(`../internal-plugins/query-runner/query-queue`)\nconst { writePages } = require(`../internal-plugins/query-runner/pages-writer`)\nconst {\n  writeRedirects,\n} = require(`../internal-plugins/query-runner/redirects-writer`)\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`./log-line-function`)\n\ntype BootstrapArgs = {\n  directory: string,\n  prefixPaths?: boolean,\n  parentSpan: Object,\n}\n\nmodule.exports = async (args: BootstrapArgs) => {\n  const spanArgs = args.parentSpan ? { childOf: args.parentSpan } : {}\n  const bootstrapSpan = tracer.startSpan(`bootstrap`, spanArgs)\n\n  // Start plugin runner which listens to the store\n  // and invokes Gatsby API based on actions.\n  require(`../redux/plugin-runner`)\n\n  const directory = slash(args.directory)\n\n  const program = {\n    ...args,\n    browserslist: getBrowserslist(directory),\n    // Fix program directory path for windows env.\n    directory,\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  // Try opening the site's gatsby-config.js file.\n  let activity = report.activityTimer(`open and validate gatsby-configs`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  let config = await preferDefault(\n    getConfigFile(program.directory, `gatsby-config`)\n  )\n\n  // theme gatsby configs can be functions or objects\n  if (config && config.__experimentalThemes) {\n    const themes = await loadThemes(config)\n    config = themes.config\n\n    store.dispatch({\n      type: `SET_RESOLVED_THEMES`,\n      payload: themes.themes,\n    })\n  }\n\n  if (config && config.polyfill) {\n    report.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  store.dispatch({\n    type: `SET_SITE_CONFIG`,\n    payload: config,\n  })\n\n  activity.end()\n\n  activity = report.activityTimer(`load plugins`)\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config, program.directory)\n  activity.end()\n\n  telemetry.decorateEvent(`BUILD_END`, {\n    plugins: flattenedPlugins.map(p => `${p.name}@${p.version}`),\n  })\n\n  // onPreInit\n  activity = report.activityTimer(`onPreInit`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  // During builds, delete html and css files from the public directory as we don't want\n  // deleted pages and styles from previous builds to stick around.\n  if (process.env.NODE_ENV === `production`) {\n    activity = report.activityTimer(\n      `delete html and css files from previous builds`,\n      {\n        parentSpan: bootstrapSpan,\n      }\n    )\n    activity.start()\n    await del([\n      `public/*.{html,css}`,\n      `public/**/*.{html,css}`,\n      `!public/static`,\n      `!public/static/**/*.{html,css}`,\n    ])\n    activity.end()\n  }\n\n  activity = report.activityTimer(`initialize cache`)\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes = await Promise.all([\n    md5File(`package.json`),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-config.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-node.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  let state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    report.info(report.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's not any stale\n      data\n    `)\n  }\n  const cacheDirectory = `${program.directory}/.cache`\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash) {\n    try {\n      // Attempt to empty dir if remove fails,\n      // like when directory is mount point\n      await fs.remove(cacheDirectory).catch(() => fs.emptyDir(cacheDirectory))\n    } catch (e) {\n      report.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(cacheDirectory)\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${program.directory}/public/static`)\n\n  activity.end()\n\n  if (process.env.GATSBY_DB_NODES === `loki`) {\n    const loki = require(`../db/loki`)\n    // Start the nodes database (in memory loki js with interval disk\n    // saves). If data was saved from a previous build, it will be\n    // loaded here\n    activity = report.activityTimer(`start nodes db`, {\n      parentSpan: bootstrapSpan,\n    })\n    activity.start()\n    const dbSaveFile = `${cacheDirectory}/loki/loki.db`\n    try {\n      await loki.start({\n        saveFile: dbSaveFile,\n      })\n    } catch (e) {\n      report.error(\n        `Error starting DB. Perhaps try deleting ${path.dirname(dbSaveFile)}`\n      )\n    }\n    activity.end()\n  }\n\n  // By now, our nodes database has been loaded, so ensure that we\n  // have tracked all inline objects\n  nodeTracking.trackDbNodes()\n\n  // Copy our site files to the root of the site.\n  activity = report.activityTimer(`copy gatsby files`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = cacheDirectory\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, {\n      clobber: true,\n    })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`, {\n      clobber: true,\n    })\n    await fs.ensureDirSync(`${cacheDirectory}/json`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${cacheDirectory}/fragments`)\n  } catch (err) {\n    report.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin) => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n\n    // Always include gatsby-browser.js files if they exists as they're\n    // a handy place to include global styles and other global imports.\n    try {\n      if (env === `browser`) {\n        return slash(\n          require.resolve(path.join(plugin.resolve, `gatsby-${env}`))\n        )\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      return slash(path.join(plugin.resolve, `gatsby-${env}`))\n    }\n    return undefined\n  }\n\n  const ssrPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPluginsRequires = browserPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    report.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = report.activityTimer(`onPreBootstrap`)\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`)\n  activity.end()\n\n  // Source nodes\n  activity = report.activityTimer(`source and transform nodes`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../utils/source-nodes`)({ parentSpan: activity.span })\n  activity.end()\n\n  // Create Schema.\n  activity = report.activityTimer(`building schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`).build({ parentSpan: activity.span })\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan: bootstrapSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const graphqlRunner = (query, context = {}) => {\n    const schema = store.getState().schema\n    return graphql(\n      schema,\n      query,\n      context,\n      withResolverContext(context, schema),\n      context\n    )\n  }\n\n  // Collect pages.\n  activity = report.activityTimer(`createPages`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`createPages`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPages`,\n    waitForCascadingActions: true,\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // A variant on createPages for plugins that want to\n  // have full control over adding/removing pages. The normal\n  // \"createPages\" API is called every time (during development)\n  // that data changes.\n  activity = report.activityTimer(`createPagesStatefully`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`createPagesStatefully`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPagesStatefully`,\n    waitForCascadingActions: true,\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  activity = report.activityTimer(`onPreExtractQueries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreExtractQueries`, { parentSpan: activity.span })\n  activity.end()\n\n  // Update Schema for SitePage.\n  activity = report.activityTimer(`update schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`).rebuildWithSitePage({ parentSpan: activity.span })\n  activity.end()\n\n  // Extract queries\n  activity = report.activityTimer(`extract queries from components`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await extractQueries()\n  activity.end()\n\n  // Start the createPages hot reloader.\n  if (process.env.NODE_ENV !== `production`) {\n    require(`./page-hot-reloader`)(graphqlRunner)\n  }\n\n  // Run queries\n  activity = report.activityTimer(`run graphql queries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const startQueries = process.hrtime()\n  queryQueue.on(`task_finish`, () => {\n    const stats = queryQueue.getStats()\n    activity.setStatus(\n      `${stats.total}/${stats.peak} ${(\n        stats.total / convertHrtime(process.hrtime(startQueries)).seconds\n      ).toFixed(2)} queries/second`\n    )\n  })\n  // HACKY!!! TODO: REMOVE IN NEXT REFACTOR\n  emitter.emit(`START_QUERY_QUEUE`)\n  // END HACKY\n  runInitialQueries(activity)\n  await new Promise(resolve => queryQueue.on(`drain`, resolve))\n  activity.end()\n\n  require(`../redux/actions`).boundActionCreators.setProgramStatus(\n    `BOOTSTRAP_QUERY_RUNNING_FINISHED`\n  )\n\n  // Write out files.\n  activity = report.activityTimer(`write out page data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  try {\n    await writePages()\n  } catch (err) {\n    report.panic(`Failed to write out page data`, err)\n  }\n  activity.end()\n\n  // Write out redirects.\n  activity = report.activityTimer(`write out redirect data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await writeRedirects()\n  activity.end()\n\n  let onEndJob\n\n  const checkJobsDone = _.debounce(async resolve => {\n    const state = store.getState()\n    if (state.jobs.active.length === 0) {\n      emitter.off(`END_JOB`, onEndJob)\n\n      await finishBootstrap(bootstrapSpan)\n      resolve({ graphqlRunner })\n    }\n  }, 100)\n\n  if (store.getState().jobs.active.length === 0) {\n    await finishBootstrap(bootstrapSpan)\n    return { graphqlRunner }\n  } else {\n    return new Promise(resolve => {\n      // Wait until all side effect jobs are finished.\n      onEndJob = () => checkJobsDone(resolve)\n      emitter.on(`END_JOB`, onEndJob)\n    })\n  }\n}\n\nconst finishBootstrap = async bootstrapSpan => {\n  // onPostBootstrap\n  const activity = report.activityTimer(`onPostBootstrap`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPostBootstrap`, { parentSpan: activity.span })\n  activity.end()\n\n  report.log(``)\n  report.info(`bootstrap finished - ${process.uptime()} s`)\n  report.log(``)\n  emitter.emit(`BOOTSTRAP_FINISHED`)\n  require(`../redux/actions`).boundActionCreators.setProgramStatus(\n    `BOOTSTRAP_FINISHED`\n  )\n\n  bootstrapSpan.finish()\n}\n"],"file":"index.js"}